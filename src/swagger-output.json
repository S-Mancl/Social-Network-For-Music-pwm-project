{
  "swagger": "2.0",
  "info": {
    "title": "Social Network for Music: Backend",
    "description": "The backend for SNM project",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "GET",
      "description": "All GET requests"
    },
    {
      "name": "PUT",
      "description": "All PUT requests"
    },
    {
      "name": "POST",
      "description": "All POST requests"
    },
    {
      "name": "DELETE",
      "description": "All DELETE requests"
    },
    {
      "name": "General",
      "description": "Basic"
    },
    {
      "name": "User",
      "description": "Everything related to users"
    },
    {
      "name": "Data",
      "description": "Can be used to interact with data"
    },
    {
      "name": "Favorites",
      "description": "Can be used to interact with Favorites"
    },
    {
      "name": "Playlists",
      "description": "Can be used to interact with playlists"
    },
    {
      "name": "Groups",
      "description": "Can be used to interact with groups"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/coffee": {
      "get": {
        "tags": [
          "Test"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "418": {
            "description": "I'm a teapot",
            "schema": {
              "type": "object",
              "properties": {
                "answer": {
                  "type": "string",
                  "example": "I'm not a teapot, but I cannot brew coffee..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/genres": {
      "get": {
        "tags": [
          "General",
          "GET"
        ],
        "summary": "Gets a list of genres",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The result of the query is sent back",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "results": {
                  "type": "array",
                  "example": [
                    "acoustic",
                    "afrobeat",
                    "alt-rock",
                    "alternative"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "tags": [
          "General",
          "GET"
        ],
        "summary": "Gets a list of types",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The known types are sent back",
            "schema": {
              "type": "array",
              "example": [
                "album",
                "artist",
                "episode",
                "show",
                "track"
              ],
              "items": {
                "type": "string"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Data",
          "POST"
        ],
        "summary": "Performs a search on Spotify",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "string": {
                  "type": "string",
                  "example": "the string to search for"
                },
                "type": {
                  "type": "array",
                  "example": [
                    "album",
                    "track"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "limit": {
                  "type": "number",
                  "example": 18
                },
                "offset": {
                  "type": "number",
                  "example": 0
                }
              },
              "required": [
                "string",
                "type",
                "limit",
                "offset"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The result is sent back"
          }
        }
      }
    },
    "/requireInfo/{kind}/{id}": {
      "get": {
        "tags": [
          "Data",
          "GET"
        ],
        "summary": "Gets infos about a specific item",
        "description": "",
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The result is sent back"
          }
        }
      }
    },
    "/addOrRemoveFavorite": {
      "post": {
        "tags": [
          "Favorites",
          "POST"
        ],
        "summary": "Adds or removes favorites",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "example": "album"
                },
                "id": {
                  "type": "string",
                  "example": "1kCHru7uhxBUdzkm4gzRQc"
                },
                "name": {
                  "type": "string",
                  "example": "Hamilton (Original Broadway Cast Recording)"
                }
              },
              "required": [
                "category",
                "id",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The query was executed correctly",
            "schema": {
              "type": "object",
              "properties": {
                "removed": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user was not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/isStarred": {
      "post": {
        "tags": [
          "Favorites",
          "POST"
        ],
        "summary": "Checks if something is in the favorites",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "example": "album"
                },
                "id": {
                  "type": "string",
                  "example": "1kCHru7uhxBUdzkm4gzRQc"
                }
              },
              "required": [
                "category",
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A boolean value is sent back to indicate if the element is starred or not",
            "schema": {
              "type": "object",
              "properties": {
                "favorite": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user was not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User",
          "POST"
        ],
        "summary": "Creates a new user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "The@new.email"
                },
                "name": {
                  "type": "string",
                  "example": "Mario"
                },
                "surname": {
                  "type": "string",
                  "example": "Rossi"
                },
                "userName": {
                  "type": "string",
                  "example": "rossimario42"
                },
                "birthDate": {
                  "type": "string",
                  "example": "01-01-2000"
                },
                "favoriteGenres": {
                  "type": "array",
                  "example": [
                    "classical",
                    "broadway"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "password": {
                  "type": "string",
                  "example": "Asup3rs3cur3P4ssw0rd!!!"
                }
              },
              "required": [
                "email",
                "name",
                "surname",
                "userName",
                "birthDate",
                "favoriteGenres",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been inseted into the database"
          },
          "400": {
            "description": "The user was already registered, or at least his email or username were, or some other invalid data was inserted",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": -1
                },
                "reason": {
                  "type": "string",
                  "example": "You are missing some fields..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "The database refused the insertion, more details are provided in the response",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 6
                },
                "reason": {
                  "type": "string",
                  "example": "Generic error: explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User",
          "POST"
        ],
        "summary": "Logs in",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "my@email.com"
                },
                "password": {
                  "type": "string",
                  "example": "Asup3rs3cur3P4ssw0rd!!!"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has correctly logged in",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 4
                },
                "reason": {
                  "type": "string",
                  "example": "Logged successfully!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "The email was not an email",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 2
                },
                "reason": {
                  "type": "string",
                  "example": "This isn't really an email, is it?"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "A user with such credentials does not exist",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 3
                },
                "reason": {
                  "type": "string",
                  "example": "This user does not exist or its password is not the one you inserted."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "User",
          "GET"
        ],
        "summary": "Performs logout",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The logout was successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "The logout failed - probably the user was not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/checkLogin": {
      "get": {
        "tags": [
          "User",
          "GET"
        ],
        "summary": "Checks if the user is logged in",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The user is logged in",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Name"
                },
                "surname": {
                  "type": "string",
                  "example": "Surname"
                },
                "userName": {
                  "type": "string",
                  "example": "User Name"
                },
                "email": {
                  "type": "string",
                  "example": "email@email.email"
                },
                "birthDate": {
                  "type": "string",
                  "example": "YYYY-MM-DD"
                },
                "favoriteGenres": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "favorites": {
                  "type": "object",
                  "properties": {
                    "album": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "artist": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "audiobook": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "episode": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "show": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "track": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                },
                "playlistsFollowed": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "playlistsOwned": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "groupsOwned": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "groupsFollowed": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "tags": [
          "User",
          "PUT"
        ],
        "summary": "Updates a user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User data.",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "The@new.email"
                },
                "name": {
                  "type": "string",
                  "example": "Mario"
                },
                "surname": {
                  "type": "string",
                  "example": "Rossi"
                },
                "birthDate": {
                  "type": "string",
                  "example": "01-01-2000"
                },
                "favoriteGenres": {
                  "type": "array",
                  "example": [
                    "classical",
                    "broadway"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "password": {
                  "type": "string",
                  "example": "Asup3rs3cur3P4ssw0rd!!!"
                }
              },
              "required": [
                "email",
                "name",
                "surname",
                "birthDate",
                "favoriteGenres",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user successfully updates his data",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 0
                },
                "explanation": {
                  "type": "string",
                  "example": "you will now be logged out. Please re-login with your new credentials"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "A user with such an email is already present. The email needs to be unique.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 5
                },
                "reason": {
                  "type": "string",
                  "example": "Already present user: please choose a different username or email"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "The database refused the operation. More details are available in the response",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 6
                },
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User",
          "DELETE"
        ],
        "summary": "Deletes an user",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The user was successfully deleted",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "There was an error. More details in the response",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/{name}": {
      "get": {
        "tags": [
          "Groups",
          "GET"
        ],
        "summary": "Gets infos about a group",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the data requested",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "myGroup"
                },
                "decription": {
                  "type": "string",
                  "example": "This is a group for ..."
                },
                "playlistsShared": {
                  "type": "array",
                  "example": [
                    "classicalMusic",
                    "musicaClassica"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "owner": {
                  "type": "string",
                  "example": "userName"
                },
                "users": {
                  "type": "array",
                  "example": [
                    "userName",
                    "user42",
                    "lambda",
                    "SophosIoun"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "doIOwnIt": {
                  "type": "boolean",
                  "example": false
                },
                "following": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid data was providen",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "bad data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user was not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups",
          "DELETE"
        ],
        "summary": "Delete a group",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was deleted",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/grouplist": {
      "get": {
        "tags": [
          "Groups",
          "GET"
        ],
        "summary": "Get a list of all groups",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The response contains the requested data",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "myGroup"
                  },
                  "decription": {
                    "type": "string",
                    "example": "This is a group for ..."
                  },
                  "playlistsShared": {
                    "type": "array",
                    "example": [
                      "classicalMusic",
                      "musicaClassica"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "owner": {
                    "type": "string",
                    "example": "userName"
                  },
                  "users": {
                    "type": "array",
                    "example": [
                      "userName",
                      "user42",
                      "lambda",
                      "SophosIoun"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group": {
      "post": {
        "tags": [
          "Groups",
          "POST"
        ],
        "summary": "Creates a group",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Group data.",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "The name of your new group"
                },
                "descrizione": {
                  "type": "string",
                  "example": "The description of your new group"
                }
              },
              "required": [
                "nome",
                "descrizione"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new group was created",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "inserted correctly"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Probably you haven't specified the right params"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/owner": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: changes the owner",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Group data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the group"
                },
                "new_owner": {
                  "type": "string",
                  "example": "The username of the new owner"
                }
              },
              "required": [
                "name",
                "new_owner"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The owner was changed, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "you do not own this group, or some other data you inserted is not valid. Stop trying to hack me, please"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/description": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: changes the description",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Group data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the group"
                },
                "new_description": {
                  "type": "string",
                  "example": "The new description"
                }
              },
              "required": [
                "name",
                "new_description"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The description was changed, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "you do not own this group, or some other data you inserted is not valid. Stop trying to hack me, please"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/playlists/add": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: adds a playlist",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Group data.",
            "schema": {
              "type": "object",
              "properties": {
                "group_name": {
                  "type": "string",
                  "example": "The name of the group"
                },
                "playlist_name": {
                  "type": "string",
                  "example": "The name of the playlist to add"
                }
              },
              "required": [
                "group_name",
                "playlist_name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist was added, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "done successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "invalid data or wrong permissions"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/playlists/remove": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: removes a playlist",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Group data.",
            "schema": {
              "type": "object",
              "properties": {
                "group_name": {
                  "type": "string",
                  "example": "The name of the group"
                },
                "playlist_name": {
                  "type": "string",
                  "example": "The name of the playlist to remove"
                }
              },
              "required": [
                "group_name",
                "playlist_name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist was removed, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "done successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "invalid data or wrong permissions"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/join/{name}": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: joins a group",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user joined the group, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "bad data or already in this group"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/group/leave/{name}": {
      "put": {
        "tags": [
          "Groups",
          "PUT"
        ],
        "summary": "Updates a group status: leaves a group",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user left the group, according to the request",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "bad data or not in this group"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/info/{name}": {
      "get": {
        "tags": [
          "Playlists",
          "GET"
        ],
        "summary": "Gets infos about a playlist",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the requested informations",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "myList"
                },
                "description": {
                  "type": "string",
                  "example": "this is a playlist about old finnish songs"
                },
                "tags": {
                  "type": "array",
                  "example": [
                    "finnish",
                    "old",
                    "42"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "visibility": {
                  "type": "boolean",
                  "example": true
                },
                "owner": {
                  "type": "string",
                  "example": "userName"
                },
                "doIOwnIt": {
                  "type": "boolean",
                  "example": false
                },
                "following": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/search/name/{name}": {
      "get": {
        "tags": [
          "Playlists",
          "GET"
        ],
        "summary": "Gets playlist with that name as a substring of theirs",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the requested informations",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "myList"
                  },
                  "description": {
                    "type": "string",
                    "example": "this is a playlist about old finnish songs"
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "finnish",
                      "old",
                      "42"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "visibility": {
                    "type": "boolean",
                    "example": true
                  },
                  "owner": {
                    "type": "string",
                    "example": "userName"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/search/tag/{tag}": {
      "get": {
        "tags": [
          "Playlists",
          "GET"
        ],
        "summary": "Gets playlist with that tag in their tags",
        "description": "",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the requested informations",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "myList"
                  },
                  "description": {
                    "type": "string",
                    "example": "this is a playlist about old finnish songs"
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "finnish",
                      "old",
                      "42"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "visibility": {
                    "type": "boolean",
                    "example": true
                  },
                  "owner": {
                    "type": "string",
                    "example": "userName"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist": {
      "post": {
        "tags": [
          "Playlists",
          "POST"
        ],
        "summary": "Creates a group",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "The name of your new playlist"
                },
                "descrizione": {
                  "type": "string",
                  "example": "The description of your new playlist"
                }
              },
              "required": [
                "nome",
                "descrizione"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A playlist was created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "inserted correctly"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Probably you haven't specified the right params"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/sort/{name}": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: adds a song",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "array",
                  "example": [
                    "7m9XR7FquXLP1FewdAcNS9",
                    "6oF8ueLn5hIl4PRp17sxW6",
                    "6p7jXaTJdpzGWnOJoK2jYr",
                    "3lXyAQ0kekAvY5LodpWmUs",
                    "27MB0qHaYAZiTlwg25js1Y",
                    "7EqpEBPOohgk7NnKvBGFWo",
                    "1CzeuSrm71wHP9qsjg7p3F",
                    "3dP0pLbg9OfVwssDjp9aT0",
                    "54Sc7mZQ1RM03STpk4SfaA",
                    "2yBMVrq96wb9OHbMdBs0lF",
                    "3nJYcY9yvKP8Oi2Ml8brXt",
                    "6OG1S805gIrH5nAQbEOPY3",
                    "2G9lekfCh83S0lt2yfffBz",
                    "71X7bPDljJHrmEGYCe7kQ8",
                    "0NJWhm3hUwIZSy5s0TGJ8q",
                    "4cxvludVmQxryrnx1m9FqL",
                    "6dr7ekfhlbquvsVY8D7gyk",
                    "4TTV7EcfroSLWzXRY6gLv6"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "order"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order of the songs was changed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "everything is fine"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/songs/add": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: adds a song",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "song_id": {
                  "type": "string",
                  "example": "The id of the song to add"
                }
              },
              "required": [
                "name",
                "song_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The song was added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "done"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/songs/remove": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: removes a song",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "song_id": {
                  "type": "string",
                  "example": "The id of the song to add"
                }
              },
              "required": [
                "name",
                "song_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The song was removed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "done"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/owner": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: changes the owner",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "new_owner": {
                  "type": "string",
                  "example": "The username of the new owner"
                }
              },
              "required": [
                "name",
                "new_owner"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The owner changed, as requested",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/description": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: changes the description",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "new_description": {
                  "type": "string",
                  "example": "The new description"
                }
              },
              "required": [
                "name",
                "new_description"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist changed, as requested",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/follow/{name}": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: start following",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user is now following the playlist",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/unfollow/{name}": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: stop following",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user has ceased following the playlist",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/tags/add": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: adds a tag",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "tag": {
                  "type": "string",
                  "example": "The new tag"
                }
              },
              "required": [
                "name",
                "tag"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A tag was added to the playlist successfully"
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/tags/remove": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: removes a tag",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Playlist data.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "The name of the playlist"
                },
                "tag": {
                  "type": "string",
                  "example": "The old tag"
                }
              },
              "required": [
                "name",
                "tag"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A tag was removed from the playlist successfully",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/publish/{name}": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: publishes it",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist is now public",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/private/{name}": {
      "put": {
        "tags": [
          "Playlists",
          "PUT"
        ],
        "summary": "Updates a playlist status: makes it private",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist is now private",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "ok"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/playlist/{name}": {
      "delete": {
        "tags": [
          "Playlists",
          "DELETE"
        ],
        "summary": "Delete a playlist",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The playlist was successfully deleted",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "done correctly"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Something failed. Refer to the response for more details",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Generic error: Explanation"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "The user is not logged in",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "example": "Invalid login"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}